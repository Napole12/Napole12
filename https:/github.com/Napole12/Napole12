{Перевірка правильності розстановки
дужок}
var s:string;
function P(r:string):boolean;
var i,k:integer;
begin
P:=true; 
k:=0; 
i:=0;
repeat
i:=i+1;
if R[i]='(' then k:=k+1 else k:=k-1;
until (i=length(r))or(k<0);
if k<>0 then P:=false
end;
begin 
readln(s);
writeln(P(s))
end.


{вивести довжину кожного слова у реченні}
var s:string;
Procedure LW(r:string);
var i,k:integer;
begin
k:=0;
for i:=1 to length(r) do
if r[i]<>' ' then k:=k+1
else begin write( k:k,' ');k:=0end
end
begin
repeat
writeln(‘речення?’); readln(s); s:=s+' '; LW(s)
until s=' '
end.



{вивести найдовше слово у реченні}
var s:string; 
Function MaxW(r:string):string;
 var i,k,m:integer; 
 begin
   k:=0; m:=0;
   for i:=1 to length(r)  do
       if r[i]<>' ' 
        then  k:=k+1  
       else 
       begin
        if k> m then
        begin
            m:=k;
            MaxW:=Copy(r,i-k,k);
        end;
       k:=0;
 end;
end;
begin
repeat
 begin
    writeln('речення?');
    readln(s);
    s:=s+' ';
    writeln(MaxW(s));
 end;
 until s=' ';
end.


Var {   утворити масив із слів рядка      } 
  S:string;
  a_s:array[1..100] of string;
  k,i,j:byte;
begin
  writeln('S?');
  readln(s); s:=s+' ';
  i:=0;
  k:=0;
  for j:=1 to length(s) do
    if s[j]<>' ' then 
        k:=k+1
    else if k <> 0 then
    begin
       i:=i+1;
       a_s[i]:=copy(s,j-k,k);
       k:=0;
    end;
  for j:=1 to i do writeln(j,':',a_s[j]);
end.


{Вивести з речення слова- паліндроми}
var
   s:string;
function PS(s1:string(sad)boolean;
  var
    i,L:longint;
  begin
    L:=length(s1);
    PS:=true;
    for i:=1 to L div 2 do
        if s1[i] <> s1[L-i+1] then PS:=false;
  end; 
procedure slovo(str:string);
  var
    i,k:longint;
    s1:string;
  begin
    k:=0;
    for i:=1 to length(str) do
       if str[i]<>' ' then
            k:=k+1
        else 
        begin
            s1:=copy(str,i-k,k);
            if   PS(s1) then write(s1,',');
            k:=0;
         end;
         end;
    begin
   repeat
   begin
    writeln('Речення?');
    readln(s);  s:=s+' ';
    slovo(s);
   end;
  until s=' ';
end.




{Вивести з речення слова в яких 
повторюється остання літера}
var
   s:string;
function PS(s1:string):boolean;
  var
    i,L:longint;
  begin
    L:=length(s1);
    PS:=false;
    for i:=1 to L -1 do
        if s1[i]=s1[L] then PS:=true;
  end;
procedure slovo(str:string);
  var
    i,k:longint;
    s1:string;
  begin
    k:=0;
    for i:=1 to length(str) do
       if str[i]<>' ' then k:=k+1
                          else 
           begin
               s1:=copy(str,i-k,k);
               if   PS(s1) then write(s1,',');
               k:=0;
          end;
     end;
begin
   repeat
    writeln(‘Речення?’);
    readln(s);  s:=s+' ';
    slovo(s);
  until s=' ';
  end.
  
  
  
  {Вилучення зайвих прогалин}
var
  s:string;
procedure Del_P(var R:string);
  var
    p:byte;
  begin
    p:=Pos('   ',R);
    while p>0 do
      begin
        delete(R,p,1); p:=Pos('   ',R);
      end;
  end;
begin
  repeat
    writeln('????');readln(s);Del_P(s);
    writeln(s)
  until s=' '
end.
 
 
Var  {заміна по контексту}
  S,S1,S2:string;
procedure Zam(var R,R1,R2:string);
  var    p:byte;
  begin
    p:=Pos(R1,R);
    while p>0 do
      begin
        delete(R,p,length(R1));
         insert(R2,R,p); p:=Pos(R1,R);
      end;
  end;
begin
  repeat
    writeln('рядок');readln(s);
    writeln('що замінити');readln(s1);
    writeln('на що замінити');readln(s2);
    Zam(s,s1,s2); writeln(s)
  until s=' '
end.
